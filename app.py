import os
import sys
from colorama import Fore, Style, init
import yt_dlp as youtube_dlp
import platform

# Kh·ªüi t·∫°o colorama
init(autoreset=True)

def clear_terminal():
    os.system('cls' if os.name == 'nt' else 'clear')

def print_banner():
    banner = f"""
{Fore.CYAN + Style.BRIGHT}üåÄ SOCIAL MEDIA VIDEO DOWNLOADER{Style.RESET_ALL}
{Fore.LIGHTCYAN_EX}T·∫£i video t·ª´ YouTube, TikTok, Facebook, Instagram...{Style.RESET_ALL}
"""
    print(banner)

def get_download_folder():
    """Tr·∫£ v·ªÅ th∆∞ m·ª•c Downloads m·∫∑c ƒë·ªãnh"""
    if platform.system() == "Windows":
        downloads = os.path.join(os.environ.get("USERPROFILE", ""), "Downloads")
    else:
        downloads = os.path.join(os.path.expanduser("~"), "Downloads")
    
    return downloads

def has_cookie_file():
    """Ki·ªÉm tra xem file cookies.txt c√≥ t·ªìn t·∫°i kh√¥ng"""
    return os.path.exists("cookies.txt")

def format_duration(duration):
    """ƒê·ªãnh d·∫°ng th·ªùi l∆∞·ª£ng t·ª´ gi√¢y sang ph√∫t:gi√¢y"""
    if not duration:
        return "Kh√¥ng x√°c ƒë·ªãnh"
    
    try:
        duration = int(duration)
        minutes = duration // 60
        seconds = duration % 60
        return f"{minutes}:{seconds:02d}"
    except (ValueError, TypeError):
        return "Kh√¥ng x√°c ƒë·ªãnh"

def format_file_size(size_bytes):
    """ƒê·ªãnh d·∫°ng k√≠ch th∆∞·ªõc file"""
    if not size_bytes:
        return "Kh√¥ng x√°c ƒë·ªãnh"
    
    try:
        size_mb = size_bytes / (1024 * 1024)
        return f"{size_mb:.2f} MB"
    except (ValueError, TypeError):
        return "Kh√¥ng x√°c ƒë·ªãnh"

def progress_hook(d):
    """Hi·ªÉn th·ªã ti·∫øn tr√¨nh t·∫£i"""
    if d['status'] == 'downloading':
        percent = d.get('_percent_str', 'N/A').strip()
        speed = d.get('_speed_str', 'N/A')
        eta = d.get('_eta_str', 'N/A')
        sys.stdout.write(f"\r{Fore.YELLOW}üì• ƒêang t·∫£i: {percent} | {speed} | ETA: {eta}{Style.RESET_ALL}")
        sys.stdout.flush()
    elif d['status'] == 'finished':
        print(f"\n{Fore.GREEN}‚úÖ Ho√†n th√†nh t·∫£i xu·ªëng!{Style.RESET_ALL}")

def download_video(url):
    folder = get_download_folder()

    ydl_opts = {
        'format': 'bestvideo+bestaudio/best',
        'merge_output_format': 'mp4',
        'outtmpl': os.path.join(folder, '%(title)s.%(ext)s'),
        'progress_hooks': [progress_hook],
        'noplaylist': True,
        'quiet': True,
        'ignoreerrors': True,
    }

    # Th√™m cookies.txt n·∫øu t·ªìn t·∫°i
    if has_cookie_file():
        ydl_opts['cookiefile'] = "cookies.txt"
        print(f"{Fore.GREEN}üîê ƒê√£ ph√°t hi·ªán file cookies.txt{Style.RESET_ALL}")

    try:
        with youtube_dlp.YoutubeDL(ydl_opts) as ydl:
            print(f"{Fore.CYAN}üîç ƒêang l·∫•y th√¥ng tin video...{Style.RESET_ALL}")
            info = ydl.extract_info(url, download=False)
            title = info.get("title", "Kh√¥ng x√°c ƒë·ªãnh")
            duration = info.get('duration', 0)
            
            print(f"\n{Fore.LIGHTGREEN_EX}üìπ Th√¥ng tin video:{Style.RESET_ALL}")
            print(f"   {Fore.WHITE}Ti√™u ƒë·ªÅ: {title}{Style.RESET_ALL}")
            print(f"   {Fore.WHITE}Th·ªùi l∆∞·ª£ng: {format_duration(duration)}{Style.RESET_ALL}")
            print(f"   {Fore.WHITE}Ch·∫•t l∆∞·ª£ng: T·ªët nh·∫•t{Style.RESET_ALL}")
            
            # C·∫£nh b√°o cho Twitter/X n·∫øu kh√¥ng c√≥ cookies
            if ("x.com" in url or "twitter.com" in url) and not has_cookie_file():
                print(f"\n{Fore.YELLOW}‚ö†Ô∏è  C·∫£nh b√°o: Video Twitter/X c√≥ th·ªÉ c·∫ßn cookies.txt ƒë·ªÉ t·∫£i{Style.RESET_ALL}")
                print(f"{Fore.YELLOW}   T·∫°o file cookies.txt trong th∆∞ m·ª•c tool ƒë·ªÉ t·∫£i video Twitter/X{Style.RESET_ALL}")
            
            print(f"\n{Fore.YELLOW}üöÄ B·∫Øt ƒë·∫ßu t·∫£i xu·ªëng...{Style.RESET_ALL}")
            ydl.download([url])
            
            # Hi·ªÉn th·ªã th√¥ng tin file sau khi t·∫£i xong
            filename = ydl.prepare_filename(info)
            file_path = os.path.join(folder, os.path.basename(filename))
            
            file_size = 0
            if os.path.exists(file_path):
                try:
                    file_size = os.path.getsize(file_path)
                except OSError:
                    file_size = 0
            
            print(f"\n{Fore.LIGHTGREEN_EX}üìÇ T·∫£i xu·ªëng ho√†n t·∫•t:{Style.RESET_ALL}")
            print(f"   {Fore.WHITE}T√™n file: {os.path.basename(filename)}{Style.RESET_ALL}")
            print(f"   {Fore.WHITE}K√≠ch th∆∞·ªõc: {format_file_size(file_size)}{Style.RESET_ALL}")
            print(f"   {Fore.WHITE}V·ªã tr√≠ l∆∞u: {folder}{Style.RESET_ALL}")
            
    except Exception as e:
        error_msg = str(e)
        if ("x.com" in url or "twitter.com" in url) and "cookies" in error_msg.lower():
            print(f"\n{Fore.RED}‚ùå L·ªói Twitter/X: C·∫ßn file cookies.txt ƒë·ªÉ t·∫£i video{Style.RESET_ALL}")
            print(f"{Fore.YELLOW}üí° H∆∞·ªõng d·∫´n:{Style.RESET_ALL}")
            print(f"{Fore.WHITE}1. S·ª≠ d·ª•ng extension 'Get cookies.txt' tr√™n tr√¨nh duy·ªát{Style.RESET_ALL}")
            print(f"{Fore.WHITE}2. Export cookies t·ª´ twitter.com ho·∫∑c x.com{Style.RESET_ALL}")
            print(f"{Fore.WHITE}3. L∆∞u file th√†nh cookies.txt trong th∆∞ m·ª•c tool{Style.RESET_ALL}")
        else:
            print(f"{Fore.RED}‚ùå L·ªói: {error_msg}{Style.RESET_ALL}")

def main():
    clear_terminal()
    print_banner()

    url = input(f"{Fore.MAGENTA}üìé Nh·∫≠p URL video: {Style.RESET_ALL}").strip()
    if not url:
        print(f"{Fore.RED}‚ö†Ô∏è URL kh√¥ng h·ª£p l·ªá!{Style.RESET_ALL}")
        return

    download_video(url)
    
    print(f"\n{Fore.LIGHTCYAN_EX}‚ú® C·∫£m ∆°n ƒë√£ s·ª≠ d·ª•ng tool!{Style.RESET_ALL}")

if __name__ == "__main__":
    main()